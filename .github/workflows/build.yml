name: Python CI
'on':
  push:
    branches:
      - mert
  pull_request:
    branches:
      - sanem
      - mert
jobs:
  build:
    if: github.event_name == 'push'
    env:
      JOB_STATUS_UNIT: ok
      JOB_STATUS_SCA: ok
      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: '${{ runner.os }}-pip-${{ hashFiles(''**/requirements.txt'') }}'
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: '${{ runner.os }}-pip-${{ hashFiles(''**/requirements.txt'') }}'
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Slack Notification for Unit Tests
        uses: bryan-nice/slack-notification@master
        env:
          SLACK_WEBHOOK: '${{ secrets.SLACK_WEBHOOK }}'
          SLACK_TITLE: Failure
          SLACK_MESSAGE: "You cannot pass the tests... Check your unit tests! workflow: ${{ github.workflow }} run id: ${{ github.run_id\t}}\t"
        if: failure()
      - name: Set Unit Test Status
        id: unitslack
        run: |
          echo "::set-output name=JOB_STATUS_UNIT::failed"
        if: failure()
      - name: Check outputs
        run: >
          echo "Pull Request Number - ${{ steps.test.outputs }}"

          echo "Pull Request Number - ${{
          steps.unitslack.outputs.JOB_STATUS_UNIT }}"

          echo "Pull Request Number - $JOB_STATUS_UNIT"
        if: always()
      - name: Run Sonar for vulernability check in dependencies
        run: |
          pip install safety
          safety check --full-report
     # - name: Analyze with SonarCloud
     #   uses: sonarsource/sonarcloud-github-action@master
     #   env:
     #     GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
     #     SONAR_TOKEN: '${{ secrets.SONAR_TOKEN }}'
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: '${{ secrets.SNYK_TOKEN }}'
        with:
          args: '--severity-threshold=high'
          command: monitor
      - name: Slack Notification for Snyk
        if: steps.unitslack.outputs.JOB_STATUS_UNIT != 'failed' && failure()
        uses: bryan-nice/slack-notification@master
        env:
          SLACK_WEBHOOK: '${{ secrets.SLACK_WEBHOOK }}'
          SLACK_TITLE: Failure
          SLACK_MESSAGE: "You got an error during SCA Step, Snyk! workflow: ${{ github.workflow }} run id: ${{ github.run_id\t}}\t"
      - uses: azure/docker-login@v1
        with:
          login-server: identityservice.azurecr.io
          username: '${{ secrets.REGISTRY_USERNAME }}'
          password: '${{ secrets.REGISTRY_PASSWORD }}'
      - run: |
          docker build . -t identityservice.azurecr.io/serviceone:${{ github.run_id }}
          docker push identityservice.azurecr.io/serviceone:${{ github.run_id }}
  staging:
    if: github.run_id != 'refs/heads/mert' &&  github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest
    steps:
